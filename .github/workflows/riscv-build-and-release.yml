name: Build RISC-V runner

on:
  push:
    branches:
      - main_riscv
    tags:
      - '*_riscv'  # Tags patched for RISC-V
  workflow_dispatch:

jobs:
  build:
    runs-on: pioneer-box
    container:
      image: riscv64/ubuntu:24.04
    steps:
    
    - name: Install Prerequisites
      run: |
        export DEBIAN_FRONTEND=noninteractive TZ=UTC
        apt-get update 
        apt-get install -y build-essential tzdata libicu70 libtinfo6 libssl3 zlib1g libc6 libstdc++6 libgcc-s1

    - name: Clean up
      run: |
        rm -rf github-runner-riscv $GITHUB_WORKSPACE/packages $GITHUB_WORKSPACE/dotnet*

    - name: Clone Repository
      run: |
        git clone -b main_riscv --depth=1 https://github.com/alitariq4589/github-runner-riscv.git
    
    - name: Download .NET and related packages
      run: |
        # Fetching Dotnet
        wget -q https://github.com/alitariq4589/dotnet-riscv/releases/download/v8.0.101/dotnet-sdk-8.0.101-linux-riscv64.tar.gz
        
        
        # Fetching Nuget packages
        mkdir $GITHUB_WORKSPACE/packages
        cd $GITHUB_WORKSPACE/packages

        wget -q https://github.com/alitariq4589/dotnet-riscv/releases/download/v8.0.101/Microsoft.AspNetCore.App.Runtime.linux-riscv64.8.0.1.nupkg
        wget -q https://github.com/alitariq4589/dotnet-riscv/releases/download/v8.0.101/Microsoft.AspNetCore.App.Runtime.linux-riscv64.8.0.1.symbols.nupkg
        wget -q https://github.com/alitariq4589/dotnet-riscv/releases/download/v8.0.101/Microsoft.DotNet.Common.ItemTemplates.8.0.101.nupkg
        wget -q https://github.com/alitariq4589/dotnet-riscv/releases/download/v8.0.101/Microsoft.DotNet.Common.ItemTemplates.8.0.101.symbols.nupkg
        wget -q https://github.com/alitariq4589/dotnet-riscv/releases/download/v8.0.101/Microsoft.DotNet.Common.ProjectTemplates.8.0.8.0.101.nupkg
        wget -q https://github.com/alitariq4589/dotnet-riscv/releases/download/v8.0.101/Microsoft.DotNet.Common.ProjectTemplates.8.0.8.0.101.symbols.nupkg
        wget -q https://github.com/alitariq4589/dotnet-riscv/releases/download/v8.0.101/Microsoft.DotNet.Web.Client.ItemTemplates.8.0.1.nupkg
        wget -q https://github.com/alitariq4589/dotnet-riscv/releases/download/v8.0.101/Microsoft.DotNet.Web.ItemTemplates.8.0.8.0.1.nupkg
        wget -q https://github.com/alitariq4589/dotnet-riscv/releases/download/v8.0.101/Microsoft.DotNet.Web.ProjectTemplates.8.0.8.0.1.nupkg
        wget -q https://github.com/alitariq4589/dotnet-riscv/releases/download/v8.0.101/Microsoft.NETCore.App.Host.linux-riscv64.8.0.1.nupkg
        wget -q https://github.com/alitariq4589/dotnet-riscv/releases/download/v8.0.101/Microsoft.NETCore.App.Runtime.linux-riscv64.8.0.1.nupkg
        wget -q https://github.com/alitariq4589/dotnet-riscv/releases/download/v8.0.101/Microsoft.NETCore.App.Runtime.linux-riscv64.8.0.1.symbols.nupkg

    - name: Prepare
      run: |
        cd github-runner-riscv

        # Fetch the dotnet compiled for RISC-V
        mkdir -p _dotnetsdk/8.0.101
        cd _dotnetsdk/8.0.101
        tar -xf $GITHUB_WORKSPACE/dotnet-sdk-8.0.101-linux-riscv64.tar.gz

    - name: Build
      run: |
        cd github-runner-riscv/src
        ./dev.sh layout Release linux-riscv64

    - name: Package
      run: |
        cd github-runner-riscv/src
        ./dev.sh package Release linux-riscv64

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: actions-runner-linux-riscv64
        path: "github-runner-riscv/_package/actions-runner-linux-riscv64-*.tar.gz"

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    permissions:
      contents: write # Important: This permission is required to create a release as by default actions dont have the permissions

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: actions-runner-linux-riscv64

      - name: Get filename of the package
        id: get_filename
        run: |
          filename=$(basename $(ls -1 _package/actions-runner-linux-riscv64-*.tar.gz))
          echo "filename=$filename" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "_package/${{ steps.get_filename.outputs.filename }}"
          asset_name: ${{ steps.get_filename.outputs.filename }}
          asset_content_type: application/gzip